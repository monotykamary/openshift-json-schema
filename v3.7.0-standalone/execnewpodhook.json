{
  "$schema": "http://json-schema.org/schema#", 
  "required": [
    "command", 
    "containerName"
  ], 
  "type": "object", 
  "description": "ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template.", 
  "properties": {
    "containerName": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container."
    }, 
    "command": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Command is the action command and its arguments."
    }, 
    "env": {
      "items": {
        "required": [
          "name"
        ], 
        "description": "EnvVar represents an environment variable present in a Container.", 
        "properties": {
          "valueFrom": {
            "description": "EnvVarSource represents a source for the value of an EnvVar.", 
            "properties": {
              "secretKeyRef": {
                "required": [
                  "key"
                ], 
                "description": "SecretKeySelector selects a key of a Secret.", 
                "properties": {
                  "optional": {
                    "type": "boolean", 
                    "description": "Specify whether the Secret or it's key must be defined"
                  }, 
                  "name": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "The key of the secret to select from.  Must be a valid secret key."
                  }
                }
              }, 
              "fieldRef": {
                "required": [
                  "fieldPath"
                ], 
                "description": "ObjectFieldSelector selects an APIVersioned field of an object.", 
                "properties": {
                  "fieldPath": {
                    "type": "string", 
                    "description": "Path of the field to select in the specified API version."
                  }, 
                  "apiVersion": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                  }
                }
              }, 
              "configMapKeyRef": {
                "required": [
                  "key"
                ], 
                "description": "Selects a key from a ConfigMap.", 
                "properties": {
                  "optional": {
                    "type": "boolean", 
                    "description": "Specify whether the ConfigMap or it's key must be defined"
                  }, 
                  "name": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "The key to select."
                  }
                }
              }, 
              "resourceFieldRef": {
                "required": [
                  "resource"
                ], 
                "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format", 
                "properties": {
                  "containerName": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Container name: required for volumes, optional for env vars"
                  }, 
                  "resource": {
                    "type": "string", 
                    "description": "Required: resource to select"
                  }, 
                  "divisor": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }
                }
              }
            }
          }, 
          "name": {
            "type": "string", 
            "description": "Name of the environment variable. Must be a C_IDENTIFIER."
          }, 
          "value": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Env is a set of environment variables to supply to the hook pod's container."
    }, 
    "volumes": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied."
    }
  }
}