{
  "description": "SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container.", 
  "required": [
    "priority", 
    "allowPrivilegedContainer", 
    "defaultAddCapabilities", 
    "requiredDropCapabilities", 
    "allowedCapabilities", 
    "allowHostDirVolumePlugin", 
    "volumes", 
    "allowedFlexVolumes", 
    "allowHostNetwork", 
    "allowHostPorts", 
    "allowHostPID", 
    "allowHostIPC", 
    "readOnlyRootFilesystem"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "SecurityContextConstraints", 
      "version": "v1", 
      "group": ""
    }, 
    {
      "kind": "SecurityContextConstraints", 
      "version": "v1", 
      "group": "security.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "readOnlyRootFilesystem": {
      "type": "boolean", 
      "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
    }, 
    "allowHostDirVolumePlugin": {
      "type": "boolean", 
      "description": "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin"
    }, 
    "allowHostIPC": {
      "type": "boolean", 
      "description": "AllowHostIPC determines if the policy allows host ipc in the containers."
    }, 
    "allowedFlexVolumes": {
      "items": {
        "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.AllowedFlexVolume"
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field."
    }, 
    "fsGroup": {
      "description": "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.", 
      "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.FSGroupStrategyOptions"
    }, 
    "priority": {
      "type": "integer", 
      "description": "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name.", 
      "format": "int32"
    }, 
    "defaultAddCapabilities": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities."
    }, 
    "allowHostNetwork": {
      "type": "boolean", 
      "description": "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
    }, 
    "requiredDropCapabilities": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
    }, 
    "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    }, 
    "users": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "The users who have permissions to use this security context constraints"
    }, 
    "allowHostPorts": {
      "type": "boolean", 
      "description": "AllowHostPorts determines if the policy allows host ports in the containers."
    }, 
    "groups": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "The groups that have permission to use this security context constraints"
    }, 
    "allowHostPID": {
      "type": "boolean", 
      "description": "AllowHostPID determines if the policy allows host pid in the containers."
    }, 
    "seccompProfiles": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container.\tThe wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default."
    }, 
    "allowedCapabilities": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'."
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
    }, 
    "runAsUser": {
      "description": "RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.", 
      "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.RunAsUserStrategyOptions"
    }, 
    "allowPrivilegedContainer": {
      "type": "boolean", 
      "description": "AllowPrivilegedContainer determines if a container can request to be run as privileged."
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
    }, 
    "supplementalGroups": {
      "description": "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.", 
      "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.SupplementalGroupsStrategyOptions"
    }, 
    "volumes": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"]."
    }, 
    "seLinuxContext": {
      "description": "SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.", 
      "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.SELinuxContextStrategyOptions"
    }
  }
}