{
  "description": "Image is an immutable representation of a Docker image and metadata at a point in time.", 
  "required": [
    "dockerImageLayers"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "Image", 
      "version": "v1", 
      "group": ""
    }, 
    {
      "kind": "Image", 
      "version": "v1", 
      "group": "image.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "dockerImageConfig": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2."
    }, 
    "dockerImageManifestMediaType": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2."
    }, 
    "dockerImageMetadataVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\""
    }, 
    "signatures": {
      "items": {
        "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageSignature"
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Signatures holds all signatures of the image.", 
      "x-kubernetes-patch-strategy": "merge", 
      "x-kubernetes-patch-merge-key": "name"
    }, 
    "dockerImageLayers": {
      "items": {
        "$ref": "_definitions.json#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageLayer"
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data."
    }, 
    "dockerImageManifest": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "DockerImageManifest is the raw JSON of the manifest"
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata.", 
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    }, 
    "dockerImageReference": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "DockerImageReference is the string that can be used to pull this image."
    }, 
    "dockerImageSignatures": {
      "items": {
        "type": [
          "string", 
          "null"
        ], 
        "format": "byte"
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1."
    }, 
    "dockerImageMetadata": {
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension", 
      "description": "DockerImageMetadata contains metadata about this image", 
      "x-kubernetes-patch-strategy": "replace"
    }
  }
}