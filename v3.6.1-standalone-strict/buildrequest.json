{
  "description": "BuildRequest is the resource used to pass parameters to build generator", 
  "required": [
    "triggeredBy"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "Kind": "BuildRequest", 
      "Version": "v1", 
      "Group": ""
    }, 
    {
      "Kind": "BuildRequest", 
      "Version": "v1", 
      "Group": "build.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "binary": {
      "additionalProperties": false, 
      "description": "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source.", 
      "properties": {
        "asFile": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'."
        }
      }
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
    }, 
    "from": {
      "additionalProperties": false, 
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
      "properties": {
        "kind": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        }, 
        "name": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "namespace": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "apiVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "API version of the referent."
        }, 
        "fieldPath": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "uid": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    }, 
    "revision": {
      "additionalProperties": false, 
      "required": [
        "type"
      ], 
      "description": "SourceRevision is the revision or commit information from the source for the build", 
      "properties": {
        "git": {
          "additionalProperties": false, 
          "description": "GitSourceRevision is the commit information from a git source for a build", 
          "properties": {
            "commit": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "commit is the commit hash identifying a specific commit"
            }, 
            "message": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "message is the description of a specific commit"
            }, 
            "committer": {
              "additionalProperties": false, 
              "description": "SourceControlUser defines the identity of a user of source control", 
              "properties": {
                "email": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "email of the source control user"
                }, 
                "name": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "name of the source control user"
                }
              }
            }, 
            "author": {
              "additionalProperties": false, 
              "description": "SourceControlUser defines the identity of a user of source control", 
              "properties": {
                "email": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "email of the source control user"
                }, 
                "name": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "name of the source control user"
                }
              }
            }
          }
        }, 
        "type": {
          "type": "string", 
          "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
        }
      }
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
    }, 
    "triggeredByImage": {
      "additionalProperties": false, 
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
      "properties": {
        "kind": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        }, 
        "name": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "namespace": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "apiVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "API version of the referent."
        }, 
        "fieldPath": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "uid": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    }, 
    "env": {
      "items": {
        "additionalProperties": false, 
        "required": [
          "name"
        ], 
        "description": "EnvVar represents an environment variable present in a Container.", 
        "properties": {
          "valueFrom": {
            "additionalProperties": false, 
            "description": "EnvVarSource represents a source for the value of an EnvVar.", 
            "properties": {
              "secretKeyRef": {
                "additionalProperties": false, 
                "required": [
                  "key"
                ], 
                "description": "SecretKeySelector selects a key of a Secret.", 
                "properties": {
                  "optional": {
                    "type": "boolean", 
                    "description": "Specify whether the Secret or it's key must be defined"
                  }, 
                  "name": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "The key of the secret to select from.  Must be a valid secret key."
                  }
                }
              }, 
              "fieldRef": {
                "additionalProperties": false, 
                "required": [
                  "fieldPath"
                ], 
                "description": "ObjectFieldSelector selects an APIVersioned field of an object.", 
                "properties": {
                  "fieldPath": {
                    "type": "string", 
                    "description": "Path of the field to select in the specified API version."
                  }, 
                  "apiVersion": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                  }
                }
              }, 
              "resourceFieldRef": {
                "additionalProperties": false, 
                "required": [
                  "resource"
                ], 
                "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format", 
                "properties": {
                  "containerName": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Container name: required for volumes, optional for env vars"
                  }, 
                  "resource": {
                    "type": "string", 
                    "description": "Required: resource to select"
                  }, 
                  "divisor": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }
                }
              }, 
              "configMapKeyRef": {
                "additionalProperties": false, 
                "required": [
                  "key"
                ], 
                "description": "Selects a key from a ConfigMap.", 
                "properties": {
                  "optional": {
                    "type": "boolean", 
                    "description": "Specify whether the ConfigMap or it's key must be defined"
                  }, 
                  "name": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  }, 
                  "key": {
                    "type": "string", 
                    "description": "The key to select."
                  }
                }
              }
            }
          }, 
          "name": {
            "type": "string", 
            "description": "Name of the environment variable. Must be a C_IDENTIFIER."
          }, 
          "value": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "env contains additional environment variables you want to pass into a builder container."
    }, 
    "triggeredBy": {
      "items": {
        "additionalProperties": false, 
        "description": "BuildTriggerCause holds information about a triggered build. It is used for displaying build trigger data for each build and build configuration in oc describe. It is also used to describe which triggers led to the most recent update in the build configuration.", 
        "properties": {
          "imageChangeBuild": {
            "additionalProperties": false, 
            "description": "ImageChangeCause contains information about the image that triggered a build", 
            "properties": {
              "fromRef": {
                "additionalProperties": false, 
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
                "properties": {
                  "kind": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
                  }, 
                  "name": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  }, 
                  "namespace": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
                  }, 
                  "apiVersion": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "API version of the referent."
                  }, 
                  "fieldPath": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
                  }, 
                  "resourceVersion": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
                  }, 
                  "uid": {
                    "type": [
                      "string", 
                      "null"
                    ], 
                    "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                  }
                }
              }, 
              "imageID": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "imageID is the ID of the image that triggered a a new build."
              }
            }
          }, 
          "genericWebHook": {
            "additionalProperties": false, 
            "description": "GenericWebHookCause holds information about a generic WebHook that triggered a build.", 
            "properties": {
              "secret": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "secret is the obfuscated webhook secret that triggered a build."
              }, 
              "revision": {
                "additionalProperties": false, 
                "required": [
                  "type"
                ], 
                "description": "SourceRevision is the revision or commit information from the source for the build", 
                "properties": {
                  "git": {
                    "additionalProperties": false, 
                    "description": "GitSourceRevision is the commit information from a git source for a build", 
                    "properties": {
                      "commit": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "commit is the commit hash identifying a specific commit"
                      }, 
                      "message": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "message is the description of a specific commit"
                      }, 
                      "committer": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }, 
                      "author": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }
                    }
                  }, 
                  "type": {
                    "type": "string", 
                    "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
                  }
                }
              }
            }
          }, 
          "githubWebHook": {
            "additionalProperties": false, 
            "description": "GitHubWebHookCause has information about a GitHub webhook that triggered a build.", 
            "properties": {
              "secret": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "secret is the obfuscated webhook secret that triggered a build."
              }, 
              "revision": {
                "additionalProperties": false, 
                "required": [
                  "type"
                ], 
                "description": "SourceRevision is the revision or commit information from the source for the build", 
                "properties": {
                  "git": {
                    "additionalProperties": false, 
                    "description": "GitSourceRevision is the commit information from a git source for a build", 
                    "properties": {
                      "commit": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "commit is the commit hash identifying a specific commit"
                      }, 
                      "message": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "message is the description of a specific commit"
                      }, 
                      "committer": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }, 
                      "author": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }
                    }
                  }, 
                  "type": {
                    "type": "string", 
                    "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
                  }
                }
              }
            }
          }, 
          "gitlabWebHook": {
            "additionalProperties": false, 
            "description": "GitLabWebHookCause has information about a GitLab webhook that triggered a build.", 
            "properties": {
              "secret": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Secret is the obfuscated webhook secret that triggered a build."
              }, 
              "revision": {
                "additionalProperties": false, 
                "required": [
                  "type"
                ], 
                "description": "SourceRevision is the revision or commit information from the source for the build", 
                "properties": {
                  "git": {
                    "additionalProperties": false, 
                    "description": "GitSourceRevision is the commit information from a git source for a build", 
                    "properties": {
                      "commit": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "commit is the commit hash identifying a specific commit"
                      }, 
                      "message": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "message is the description of a specific commit"
                      }, 
                      "committer": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }, 
                      "author": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }
                    }
                  }, 
                  "type": {
                    "type": "string", 
                    "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
                  }
                }
              }
            }
          }, 
          "message": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "message is used to store a human readable message for why the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration change\",etc."
          }, 
          "bitbucketWebHook": {
            "additionalProperties": false, 
            "description": "BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build.", 
            "properties": {
              "secret": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Secret is the obfuscated webhook secret that triggered a build."
              }, 
              "revision": {
                "additionalProperties": false, 
                "required": [
                  "type"
                ], 
                "description": "SourceRevision is the revision or commit information from the source for the build", 
                "properties": {
                  "git": {
                    "additionalProperties": false, 
                    "description": "GitSourceRevision is the commit information from a git source for a build", 
                    "properties": {
                      "commit": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "commit is the commit hash identifying a specific commit"
                      }, 
                      "message": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "message is the description of a specific commit"
                      }, 
                      "committer": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }, 
                      "author": {
                        "additionalProperties": false, 
                        "description": "SourceControlUser defines the identity of a user of source control", 
                        "properties": {
                          "email": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "email of the source control user"
                          }, 
                          "name": {
                            "type": [
                              "string", 
                              "null"
                            ], 
                            "description": "name of the source control user"
                          }
                        }
                      }
                    }
                  }, 
                  "type": {
                    "type": "string", 
                    "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
                  }
                }
              }
            }
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
    }, 
    "lastVersion": {
      "type": "integer", 
      "description": "lastVersion (optional) is the LastVersion of the BuildConfig that was used to generate the build. If the BuildConfig in the generator doesn't match, a build will not be generated.", 
      "format": "int64"
    }, 
    "dockerStrategyOptions": {
      "additionalProperties": false, 
      "description": "DockerStrategyOptions contains extra strategy options for Docker builds", 
      "properties": {
        "buildArgs": {
          "items": {
            "additionalProperties": false, 
            "required": [
              "name"
            ], 
            "description": "EnvVar represents an environment variable present in a Container.", 
            "properties": {
              "valueFrom": {
                "additionalProperties": false, 
                "description": "EnvVarSource represents a source for the value of an EnvVar.", 
                "properties": {
                  "secretKeyRef": {
                    "additionalProperties": false, 
                    "required": [
                      "key"
                    ], 
                    "description": "SecretKeySelector selects a key of a Secret.", 
                    "properties": {
                      "optional": {
                        "type": "boolean", 
                        "description": "Specify whether the Secret or it's key must be defined"
                      }, 
                      "name": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      }, 
                      "key": {
                        "type": "string", 
                        "description": "The key of the secret to select from.  Must be a valid secret key."
                      }
                    }
                  }, 
                  "fieldRef": {
                    "additionalProperties": false, 
                    "required": [
                      "fieldPath"
                    ], 
                    "description": "ObjectFieldSelector selects an APIVersioned field of an object.", 
                    "properties": {
                      "fieldPath": {
                        "type": "string", 
                        "description": "Path of the field to select in the specified API version."
                      }, 
                      "apiVersion": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
                      }
                    }
                  }, 
                  "resourceFieldRef": {
                    "additionalProperties": false, 
                    "required": [
                      "resource"
                    ], 
                    "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format", 
                    "properties": {
                      "containerName": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "Container name: required for volumes, optional for env vars"
                      }, 
                      "resource": {
                        "type": "string", 
                        "description": "Required: resource to select"
                      }, 
                      "divisor": {
                        "oneOf": [
                          {
                            "type": [
                              "string", 
                              "null"
                            ]
                          }, 
                          {
                            "type": "integer"
                          }
                        ]
                      }
                    }
                  }, 
                  "configMapKeyRef": {
                    "additionalProperties": false, 
                    "required": [
                      "key"
                    ], 
                    "description": "Selects a key from a ConfigMap.", 
                    "properties": {
                      "optional": {
                        "type": "boolean", 
                        "description": "Specify whether the ConfigMap or it's key must be defined"
                      }, 
                      "name": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      }, 
                      "key": {
                        "type": "string", 
                        "description": "The key to select."
                      }
                    }
                  }
                }
              }, 
              "name": {
                "type": "string", 
                "description": "Name of the environment variable. Must be a C_IDENTIFIER."
              }, 
              "value": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
              }
            }
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details"
        }
      }
    }, 
    "metadata": {
      "additionalProperties": false, 
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.", 
      "properties": {
        "ownerReferences": {
          "items": {
            "additionalProperties": false, 
            "required": [
              "apiVersion", 
              "kind", 
              "name", 
              "uid"
            ], 
            "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.", 
            "properties": {
              "kind": {
                "type": "string", 
                "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
              }, 
              "uid": {
                "type": "string", 
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              }, 
              "apiVersion": {
                "type": "string", 
                "description": "API version of the referent."
              }, 
              "controller": {
                "type": "boolean", 
                "description": "If true, this reference points to the managing controller."
              }, 
              "blockOwnerDeletion": {
                "type": "boolean", 
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
              }, 
              "name": {
                "type": "string", 
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              }
            }
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
        }, 
        "name": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "deletionTimestamp": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "clusterName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        }, 
        "deletionGracePeriodSeconds": {
          "type": "integer", 
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
          "format": "int64"
        }, 
        "labels": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        }, 
        "namespace": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "generation": {
          "type": "integer", 
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
          "format": "int64"
        }, 
        "finalizers": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "generateName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency"
        }, 
        "creationTimestamp": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "annotations": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        }, 
        "selfLink": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }, 
        "uid": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    }
  }
}