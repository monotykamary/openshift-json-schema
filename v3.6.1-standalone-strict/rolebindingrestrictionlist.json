{
  "description": "RoleBindingRestrictionList is a collection of RoleBindingRestriction objects.", 
  "required": [
    "items"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "Kind": "RoleBindingRestrictionList", 
      "Version": "v1", 
      "Group": ""
    }, 
    {
      "Kind": "RoleBindingRestrictionList", 
      "Version": "v1", 
      "Group": "authorization.openshift.io"
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "items": {
      "items": {
        "additionalProperties": false, 
        "required": [
          "metadata", 
          "spec"
        ], 
        "x-kubernetes-group-version-kind": [
          {
            "Kind": "RoleBindingRestriction", 
            "Version": "v1", 
            "Group": ""
          }, 
          {
            "Kind": "RoleBindingRestriction", 
            "Version": "v1", 
            "Group": "authorization.openshift.io"
          }
        ], 
        "description": "RoleBindingRestriction is an object that can be matched against a subject (user, group, or service account) to determine whether rolebindings on that subject are allowed in the namespace to which the RoleBindingRestriction belongs.  If any one of those RoleBindingRestriction objects matches a subject, rolebindings on that subject in the namespace are allowed.", 
        "properties": {
          "kind": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
          }, 
          "spec": {
            "additionalProperties": false, 
            "required": [
              "userrestriction", 
              "grouprestriction", 
              "serviceaccountrestriction"
            ], 
            "description": "RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil.", 
            "properties": {
              "serviceaccountrestriction": {
                "additionalProperties": false, 
                "required": [
                  "serviceaccounts", 
                  "namespaces"
                ], 
                "description": "ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace.", 
                "properties": {
                  "serviceaccounts": {
                    "items": {
                      "additionalProperties": false, 
                      "required": [
                        "name", 
                        "namespace"
                      ], 
                      "description": "ServiceAccountReference specifies a service account and namespace by their names.", 
                      "properties": {
                        "namespace": {
                          "type": "string", 
                          "description": "Namespace is the namespace of the service account.  Service accounts from inside the whitelisted namespaces are allowed to be bound to roles.  If Namespace is empty, then the namespace of the RoleBindingRestriction in which the ServiceAccountReference is embedded is used."
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "Name is the name of the service account."
                        }
                      }
                    }, 
                    "type": "array", 
                    "description": "ServiceAccounts specifies a list of literal service-account names."
                  }, 
                  "namespaces": {
                    "items": {
                      "type": [
                        "string", 
                        "null"
                      ]
                    }, 
                    "type": "array", 
                    "description": "Namespaces specifies a list of literal namespace names."
                  }
                }
              }, 
              "userrestriction": {
                "additionalProperties": false, 
                "required": [
                  "users", 
                  "groups", 
                  "labels"
                ], 
                "description": "UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels.", 
                "properties": {
                  "labels": {
                    "items": {
                      "additionalProperties": false, 
                      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
                      "properties": {
                        "matchLabels": {
                          "additionalProperties": {
                            "type": [
                              "string", 
                              "null"
                            ]
                          }, 
                          "type": "object", 
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                        }, 
                        "matchExpressions": {
                          "items": {
                            "additionalProperties": false, 
                            "required": [
                              "key", 
                              "operator"
                            ], 
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                            "properties": {
                              "operator": {
                                "type": "string", 
                                "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist."
                              }, 
                              "values": {
                                "items": {
                                  "type": [
                                    "string", 
                                    "null"
                                  ]
                                }, 
                                "type": [
                                  "array", 
                                  "null"
                                ], 
                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                              }, 
                              "key": {
                                "type": "string", 
                                "description": "key is the label key that the selector applies to."
                              }
                            }
                          }, 
                          "type": [
                            "array", 
                            "null"
                          ], 
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                        }
                      }
                    }, 
                    "type": "array", 
                    "description": "Selectors specifies a list of label selectors over user labels."
                  }, 
                  "users": {
                    "items": {
                      "type": [
                        "string", 
                        "null"
                      ]
                    }, 
                    "type": "array", 
                    "description": "Users specifies a list of literal user names."
                  }, 
                  "groups": {
                    "items": {
                      "type": [
                        "string", 
                        "null"
                      ]
                    }, 
                    "type": "array", 
                    "description": "Groups specifies a list of literal group names."
                  }
                }
              }, 
              "grouprestriction": {
                "additionalProperties": false, 
                "required": [
                  "groups", 
                  "labels"
                ], 
                "description": "GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels.", 
                "properties": {
                  "labels": {
                    "items": {
                      "additionalProperties": false, 
                      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
                      "properties": {
                        "matchLabels": {
                          "additionalProperties": {
                            "type": [
                              "string", 
                              "null"
                            ]
                          }, 
                          "type": "object", 
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                        }, 
                        "matchExpressions": {
                          "items": {
                            "additionalProperties": false, 
                            "required": [
                              "key", 
                              "operator"
                            ], 
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                            "properties": {
                              "operator": {
                                "type": "string", 
                                "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist."
                              }, 
                              "values": {
                                "items": {
                                  "type": [
                                    "string", 
                                    "null"
                                  ]
                                }, 
                                "type": [
                                  "array", 
                                  "null"
                                ], 
                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                              }, 
                              "key": {
                                "type": "string", 
                                "description": "key is the label key that the selector applies to."
                              }
                            }
                          }, 
                          "type": [
                            "array", 
                            "null"
                          ], 
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                        }
                      }
                    }, 
                    "type": "array", 
                    "description": "Selectors specifies a list of label selectors over group labels."
                  }, 
                  "groups": {
                    "items": {
                      "type": [
                        "string", 
                        "null"
                      ]
                    }, 
                    "type": "array", 
                    "description": "Groups is a list of groups used to match against an individual user's groups. If the user is a member of one of the whitelisted groups, the user is allowed to be bound to a role."
                  }
                }
              }
            }
          }, 
          "apiVersion": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
          }, 
          "metadata": {
            "additionalProperties": false, 
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.", 
            "properties": {
              "ownerReferences": {
                "items": {
                  "additionalProperties": false, 
                  "required": [
                    "apiVersion", 
                    "kind", 
                    "name", 
                    "uid"
                  ], 
                  "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.", 
                  "properties": {
                    "kind": {
                      "type": "string", 
                      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
                    }, 
                    "uid": {
                      "type": "string", 
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    }, 
                    "apiVersion": {
                      "type": "string", 
                      "description": "API version of the referent."
                    }, 
                    "controller": {
                      "type": "boolean", 
                      "description": "If true, this reference points to the managing controller."
                    }, 
                    "blockOwnerDeletion": {
                      "type": "boolean", 
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    }
                  }
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
              }, 
              "name": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              }, 
              "deletionTimestamp": {
                "type": [
                  "string", 
                  "null"
                ], 
                "format": "date-time"
              }, 
              "clusterName": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
              }, 
              "deletionGracePeriodSeconds": {
                "type": "integer", 
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
                "format": "int64"
              }, 
              "labels": {
                "additionalProperties": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "object", 
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }, 
              "namespace": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              }, 
              "generation": {
                "type": "integer", 
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
                "format": "int64"
              }, 
              "finalizers": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
              }, 
              "resourceVersion": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
              }, 
              "generateName": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency"
              }, 
              "creationTimestamp": {
                "type": [
                  "string", 
                  "null"
                ], 
                "format": "date-time"
              }, 
              "annotations": {
                "additionalProperties": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "object", 
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
              }, 
              "selfLink": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
              }, 
              "uid": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              }
            }
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Items is a list of RoleBindingRestriction objects."
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
    }, 
    "metadata": {
      "additionalProperties": false, 
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.", 
      "properties": {
        "selfLink": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }
      }
    }
  }
}